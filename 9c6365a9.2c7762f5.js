(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{71:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return o})),n.d(t,"default",(function(){return s}));var i=n(2),a=n(6),r=(n(0),n(85)),l={id:"setup",title:"Setup"},c={unversionedId:"setup",id:"setup",isDocsHomePage:!1,title:"Setup",description:"Basic Setup",source:"@site/../docs/setup.md",slug:"/setup",permalink:"/docs/setup",editUrl:"https://github.com/gql-dart/ferry/edit/master/docs/../docs/setup.md",version:"current",sidebar:"mainSidebar",previous:{title:"How It Works",permalink:"/docs/how-it-works"},next:{title:"Generate GraphQL Classes",permalink:"/docs/codegen"}},o=[{value:"Basic Setup",id:"basic-setup",children:[{value:"Install Dependencies",id:"install-dependencies",children:[]},{value:"Initialize the Client",id:"initialize-the-client",children:[]}]},{value:"Setup With HiveStore",id:"setup-with-hivestore",children:[{value:"Install Dependencies",id:"install-dependencies-1",children:[]},{value:"Initialize the Client",id:"initialize-the-client-1",children:[]}]}],p={rightToc:o};function s(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(r.b)("wrapper",Object(i.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h2",{id:"basic-setup"},"Basic Setup"),Object(r.b)("h3",{id:"install-dependencies"},"Install Dependencies"),Object(r.b)("p",null,"Add the following to your ",Object(r.b)("inlineCode",{parentName:"p"},"pubspec.yaml"),":"),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{className:"language-yaml"}),"dependencies:\n  ferry: #[latest-version]\n  gql_http_link: #[latest-version]\n\ndev_dependencies:\n  ferry_generator: #[latest-version]\n  build_runner: #[latest-version]\n")),Object(r.b)("h3",{id:"initialize-the-client"},"Initialize the Client"),Object(r.b)("p",null,"This instantiates a client with the default configuration, including a ",Object(r.b)("inlineCode",{parentName:"p"},"Cache")," instance that uses a ",Object(r.b)("inlineCode",{parentName:"p"},"MemoryStore")," to store data."),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{className:"language-dart"}),"import 'package:gql_http_link/gql_http_link.dart';\nimport 'package:ferry/ferry.dart';\nimport 'package:<your_pkg>/<path_to_your_schema>__generated__/schema.schema.gql.dart' show possibleTypesMap;\n\n\nfinal link = HttpLink(\"[path/to/endpoint]\");\n\nfinal cache = Cache(possibleTypes: possibleTypesMap);\n\nfinal client = Client(link: link, cache: cache);\n")),Object(r.b)("h2",{id:"setup-with-hivestore"},"Setup With HiveStore"),Object(r.b)("p",null,"Ferry includes a ",Object(r.b)("inlineCode",{parentName:"p"},"HiveStore")," which enables offline data persistance, based on the ",Object(r.b)("inlineCode",{parentName:"p"},"hive")," package."),Object(r.b)("h3",{id:"install-dependencies-1"},"Install Dependencies"),Object(r.b)("p",null,"To use the ",Object(r.b)("inlineCode",{parentName:"p"},"HiveStore"),", you'll need to add these dependencies to your ",Object(r.b)("inlineCode",{parentName:"p"},"pubspec.yaml"),":"),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{className:"language-yaml"}),"dependencies:\n  ferry: #[latest-version]\n  gql_http_link: #[latest-version]\n  hive: #[latest-version]\n  ferry_hive_store: #[latest-version]\n\ndev_dependencies:\n  ferry_generator: #[latest-version]\n  build_runner: #[latest-version]\n")),Object(r.b)("div",{className:"admonition admonition-important alert alert--info"},Object(r.b)("div",Object(i.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(i.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(i.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(r.b)("path",Object(i.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"important")),Object(r.b)("div",Object(i.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"If you're using Flutter, you'll also need to add:"),Object(r.b)("pre",{parentName:"div"},Object(r.b)("code",Object(i.a)({parentName:"pre"},{className:"language-yaml"}),"dependencies:\n  hive_flutter: #[latest-version]\n")))),Object(r.b)("h3",{id:"initialize-the-client-1"},"Initialize the Client"),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{className:"language-dart"}),"import 'package:gql_http_link/gql_http_link.dart';\nimport 'package:ferry/ferry.dart';\nimport 'package:ferry_hive_store/ferry_hive_store.dart';\nimport 'package:hive/hive.dart';\n// *** If using flutter ***\n// import 'package:hive_flutter/hive_flutter.dart';\n\nFuture<Client> initClient() async {\n  Hive.init('hive_data');\n  // OR, if using flutter\n  // await Hive.initFlutter();\n\n  final box = await Hive.openBox(\"graphql\");\n\n  final store = HiveStore(box);\n\n  final cache = Cache(store: store, possibleTypes: possibleTypesMap);\n\n  final link = HttpLink('[path/to/endpoint]');\n\n  final client = Client(\n    link: link,\n    cache: cache,\n  );\n\n  return client;\n}\n")))}s.isMDXComponent=!0},85:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return h}));var i=n(0),a=n.n(i);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=a.a.createContext({}),s=function(e){var t=a.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},d=function(e){var t=s(e.components);return a.a.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},b=a.a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),d=s(n),b=i,h=d["".concat(l,".").concat(b)]||d[b]||u[b]||r;return n?a.a.createElement(h,c(c({ref:t},p),{},{components:n})):a.a.createElement(h,c({ref:t},p))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,l=new Array(r);l[0]=b;var c={};for(var o in t)hasOwnProperty.call(t,o)&&(c[o]=t[o]);c.originalType=e,c.mdxType="string"==typeof e?e:i,l[1]=c;for(var p=2;p<r;p++)l[p]=n[p];return a.a.createElement.apply(null,l)}return a.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"}}]);