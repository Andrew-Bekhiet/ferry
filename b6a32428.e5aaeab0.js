(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{73:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return p}));var a=n(2),r=n(6),i=(n(0),n(85)),o={id:"customization",title:"Customizing the Client"},c={unversionedId:"customization",id:"customization",isDocsHomePage:!1,title:"Customizing the Client",description:"Ferry is built to be modular and extensible. Ferry's core features are implemented as composable TypedLinks, a typed version of the gqllink API. In fact, the Ferry Client itself is a TypedLink, created by composing several other core links.",source:"@site/../docs/customization.md",slug:"/customization",permalink:"/ferry/docs/customization",editUrl:"https://github.com/gql-dart/ferry/edit/master/docs/../docs/customization.md",version:"current",sidebar:"mainSidebar",previous:{title:"Custom Scalars",permalink:"/ferry/docs/custom-scalars"}},l=[{value:"Forwarding TypedLinks",id:"forwarding-typedlinks",children:[]},{value:"Chaining TypedLinks Together",id:"chaining-typedlinks-together",children:[{value:"Ordering Your TypedLink Chains",id:"ordering-your-typedlink-chains",children:[]}]},{value:"Core TypedLinks",id:"core-typedlinks",children:[]},{value:"Additional TypedLinks",id:"additional-typedlinks",children:[]}],s={rightToc:l};function p(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"Ferry is built to be modular and extensible. Ferry's core features are implemented as composable ",Object(i.b)("inlineCode",{parentName:"p"},"TypedLink"),"s, a typed version of the ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://pub.dev/packages/gql_link"}),"gql_link")," API. In fact, the Ferry Client itself is a TypedLink, created by composing several other ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"#core-typedlinks"}),"core links"),"."),Object(i.b)("p",null,"A TypedLink is simply a class with a ",Object(i.b)("inlineCode",{parentName:"p"},"request()")," method which returns a Stream of ",Object(i.b)("inlineCode",{parentName:"p"},"OperationResponse"),"s."),Object(i.b)("p",null,"For example, here's the link that Ferry uses internally to resolve requests from the ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"/ferry/docs/cache-configuration"}),"ferry_cache"),":"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-dart"}),"import 'package:ferry_exec/ferry_exec.dart';\nimport 'package:ferry_cache/ferry_cache.dart';\n\nexport 'package:ferry_cache/ferry_cache.dart';\n\n/// A terminating link that fetches the operation from the Cache, mapping the\n/// result to an [OperationResponse].\nclass CacheTypedLink extends TypedLink {\n  final Cache cache;\n\n  CacheTypedLink(Cache cache) : cache = cache ?? Cache();\n\n  @override\n  Stream<OperationResponse<TData, TVars>> request<TData, TVars>(\n    OperationRequest<TData, TVars> operationRequest, [\n    forward,\n  ]) =>\n      cache.watchQuery(operationRequest).map(\n            (data) => OperationResponse(\n              operationRequest: operationRequest,\n              data: data,\n              dataSource: DataSource.Cache,\n            ),\n          );\n}\n")),Object(i.b)("h2",{id:"forwarding-typedlinks"},"Forwarding TypedLinks"),Object(i.b)("p",null,"Not all links need to resolve the request directly. Some links simply modify the request or response stream by calling the ",Object(i.b)("inlineCode",{parentName:"p"},"forward()")," callback on the ",Object(i.b)("inlineCode",{parentName:"p"},"request()")," method. This defers resolution of the request to the next link in the chain."),Object(i.b)("p",null,'For example, ferry uses the following link to automatically add "',Object(i.b)("em",{parentName:"p"},"_","_","typename"),'" fields to each node of the GraphQL operation.'),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-dart"}),"import 'dart:async';\nimport 'package:gql_exec/gql_exec.dart';\nimport 'package:gql/ast.dart';\nimport 'package:normalize/utils.dart';\nimport 'package:ferry_exec/ferry_exec.dart';\n\n/// Adds `__typename` to each node of the operation.\nclass AddTypenameTypedLink extends TypedLink {\n  const AddTypenameTypedLink();\n\n  @override\n  Stream<OperationResponse<TData, TVars>> request<TData, TVars>(\n    OperationRequest<TData, TVars> req, [\n    forward,\n  ]) =>\n      forward(_addTypename(req));\n\n  OperationRequest<TData, TVars> _addTypename<TData, TVars>(\n    OperationRequest<TData, TVars> request,\n  ) =>\n      (request as dynamic).rebuild(\n        (b) => b\n          ..operation = Operation(\n            document: transform(\n              request.operation.document,\n              [AddTypenameVisitor()],\n            ),\n            operationName: request.operation.operationName,\n          ),\n      );\n}\n")),Object(i.b)("h2",{id:"chaining-typedlinks-together"},"Chaining TypedLinks Together"),Object(i.b)("p",null,"TypedLinks can be chained together using the ",Object(i.b)("inlineCode",{parentName:"p"},"TypedLink.from()")," method."),Object(i.b)("p",null,'The following will create a link that adds "',Object(i.b)("em",{parentName:"p"},"_","_","typename"),'" fields to the request, then resolves the request from the Cache:'),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-dart"}),"final myTypedLink = TypedLink.from([\n  AddTypenameTypedLink(),\n  CacheTypedLink(),\n]);\n")),Object(i.b)("p",null,"You can then use this link to execute requests by listening to the Stream returned by the ",Object(i.b)("inlineCode",{parentName:"p"},"request()")," method:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-dart"}),"myTypedLink.request(GMyQueryReq()).listen((data) => print(data));\n")),Object(i.b)("h3",{id:"ordering-your-typedlink-chains"},"Ordering Your TypedLink Chains"),Object(i.b)("p",null,"There are a few important guidelines that you should follow when chaining TypedLinks to ensure that your requests get executed correctly."),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"If you are using a link that originates requests (such as ",Object(i.b)("em",{parentName:"li"},"RequestControllerTypedLink"),"), it should be the first link in the chain."),Object(i.b)("li",{parentName:"ol"},'The final link in the chain must be a "terminating" link, i.e. a link that does not forward the request down the chain.')),Object(i.b)("div",{className:"admonition admonition-warning alert alert--danger"},Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"}),Object(i.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"})))),"warning")),Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("h2",Object(a.a)({parentName:"div"},{id:"dont-chain-the-ferry-client-directly"}),"Don't Chain the Ferry Client Directly"),Object(i.b)("p",{parentName:"div"},"You generally shoudn't chain the Ferry Client together with other TypedLinks. Since the Client's composition chain starts with a ",Object(i.b)("em",{parentName:"p"},"RequestControllerTypedLink")," and ends with a terminating link, adding a link before or after it would violate the above ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"#ordering-your-typedlink-chains"}),"guidelines")," and lead to unexpected results."),Object(i.b)("p",{parentName:"div"},"Instead, you can simply use the ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/gql-dart/ferry/blob/5a7defb522b3ea64327602f06d6d652f31eceb20/ferry/lib/ferry.dart#L39"}),"underlying links that Client composes"),", adding your custom link to compose your own custom chain."))),Object(i.b)("h2",{id:"core-typedlinks"},"Core TypedLinks"),Object(i.b)("p",null,"The ferry Client is created by composing these core TypedLinks."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"Client"),": The Ferry Client itself is a TypedLink, implemented by composing other core TypedLinks."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"AddTypenameTypedLink"),': Adds "',Object(i.b)("em",{parentName:"li"},"_","_","typename"),'" to each node of the operation.'),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"CacheTypedLink"),": A terminating link that fetches the operation from the Cache."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"FetchPolicyTypedLink"),": A terminating link that resolves an operation from the Link or the Cache based on the request's ",Object(i.b)("inlineCode",{parentName:"li"},"FetchPolicy"),", possibly caching the response."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"GqlTypedLink"),": A terminating link which defers execution to the provided ",Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"https://pub.dev/packages/gql_link"}),"gql_link"),". Any errors received by the ",Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"https://pub.dev/packages/gql_link"}),"gql_link")," are included in the ",Object(i.b)("inlineCode",{parentName:"li"},"OperationResponse.linkException"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"OptimisticTypedLink"),": Returns the response stream from the next link in the chain, immediately emitting a response with the optimistic data."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"RequestControllerTypedLink"),": Allows multiple requests to be made by adding requests to the ",Object(i.b)("inlineCode",{parentName:"li"},"requestController"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"UpdateCacheTypedLink"),": Runs any specified ",Object(i.b)("inlineCode",{parentName:"li"},"UpdateCacheHandler"),"s with a ",Object(i.b)("inlineCode",{parentName:"li"},"CacheProxy")," when",Object(i.b)("ol",{parentName:"li"},Object(i.b)("li",{parentName:"ol"},"an optimistic response is received"),Object(i.b)("li",{parentName:"ol"},"the first time a non-optimistic response is received")))),Object(i.b)("h2",{id:"additional-typedlinks"},"Additional TypedLinks"),Object(i.b)("p",null,"Ferry includes some additional ",Object(i.b)("inlineCode",{parentName:"p"},"TypedLink"),"s that are not included in the default client. You can use these to compose your own client."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"OfflineMutationTypedLink"),": Caches mutations in a ",Object(i.b)("inlineCode",{parentName:"li"},"hive")," box when offline and re-runs them when re-connected. This link must be between a ",Object(i.b)("inlineCode",{parentName:"li"},"RequestControllerTypedLink")," and the terminating link.")))}p.isMDXComponent=!0},85:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return u}));var a=n(0),r=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=r.a.createContext({}),p=function(e){var t=r.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},d=function(e){var t=p(e.components);return r.a.createElement(s.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},m=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=p(n),m=a,u=d["".concat(o,".").concat(m)]||d[m]||b[m]||i;return n?r.a.createElement(u,c(c({ref:t},s),{},{components:n})):r.a.createElement(u,c({ref:t},s))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var s=2;s<i;s++)o[s]=n[s];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);