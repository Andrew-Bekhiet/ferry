(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{65:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return l})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return p}));var r=n(2),a=n(6),i=(n(0),n(85)),o={id:"flutter-operation-widget",title:"Operation Widget"},l={unversionedId:"flutter-operation-widget",id:"flutter-operation-widget",isDocsHomePage:!1,title:"Operation Widget",description:"Since the entire Ferry architecture is built around native Dart Streams, the Operation Widget is just a simple wrapper around the Flutter StreamBuilder Widget.",source:"@site/../docs/flutter-operation-widget.md",slug:"/flutter-operation-widget",permalink:"/ferry/docs/flutter-operation-widget",editUrl:"https://github.com/gql-dart/ferry/edit/master/docs/../docs/flutter-operation-widget.md",version:"current",sidebar:"mainSidebar",previous:{title:"Using with Flutter",permalink:"/ferry/docs/flutter"},next:{title:"Structuring Queries",permalink:"/ferry/docs/structuring-queries"}},c=[{value:"Usage with Mutations",id:"usage-with-mutations",children:[]}],u={rightToc:c};function p(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},u,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"Since the entire Ferry architecture is built around native Dart Streams, the ",Object(i.b)("inlineCode",{parentName:"p"},"Operation")," Widget is just a simple wrapper around the Flutter ",Object(i.b)("inlineCode",{parentName:"p"},"StreamBuilder")," Widget."),Object(i.b)("p",null,"This example assumes we've registered our ",Object(i.b)("inlineCode",{parentName:"p"},"Client")," instance with ",Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"https://pub.dev/packages/get_it"}),Object(i.b)("inlineCode",{parentName:"a"},"get_it")),", but you can use any dependency injection method."),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-dart"}),"import 'package:flutter/material.dart';\nimport 'package:ferry/ferry.dart';\nimport 'package:get_it/get_it.dart';\nimport 'package:ferry_flutter/ferry_flutter.dart';\nimport 'package:built_collection/built_collection.dart';\n\nimport './graphql/all_pokemon.data.gql.dart';\nimport './graphql/all_pokemon.req.gql.dart';\nimport './graphql/all_pokemon.var.gql.dart';\nimport './pokemon_card.dart';\n\nclass AllPokemonScreen extends StatelessWidget {\n  final client = GetIt.I<Client>();\n\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      appBar: AppBar(\n        title: Text('All Pokemon'),\n      ),\n      body: Operation(\n        client: client,\n        operationRequest: GAllPokemonReq((b) => b..vars.first = 50),\n        builder: (\n          BuildContext context,\n          OperationResponse<GAllPokemonData, GAllPokemonVars> response,\n          Object error,\n        ) {\n          if (response.loading)\n            return Center(child: CircularProgressIndicator());\n\n          final pokemons = response.data?.queryPokemon ?? BuiltList();\n\n          return ListView.builder(\n            itemCount: pokemons.length,\n            itemBuilder: (context, index) => PokemonCard(\n              pokemon: pokemons[index],\n            ),\n          );\n        },\n      ),\n    );\n  }\n}\n")),Object(i.b)("h2",{id:"usage-with-mutations"},"Usage with Mutations"),Object(i.b)("p",null,"While you can use the ",Object(i.b)("inlineCode",{parentName:"p"},"Operation")," widget with any GraphQL operation, including Mutations, you probably don't need to use the widget."),Object(i.b)("p",null,"It's often easier to just execute the Mutation directly:"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-dart"}),'final createReviewReq = GCreateReviewReq(\n  (b) => b\n    ..vars.review.stars = 5\n    ..vars.review.commentary = "Amazing!!!",\n);\n\nfinal result = await client\n  .request(createReviewReq)\n  .firstWhere((response) => response.dataSource != DataSource.Optimistic);\n')),Object(i.b)("p",null,"However, sometimes we may want to show the result of calling a mutation in our Flutter UI. In that case, we can still use the ",Object(i.b)("inlineCode",{parentName:"p"},"Operation")," Widget, but we probably don't want the mutation to run immediately when the Widget loads. To tell Ferry ",Object(i.b)("em",{parentName:"p"},"not")," to execute the mutation immediately, we can set ",Object(i.b)("inlineCode",{parentName:"p"},"executeOnListen = false")," on our request."),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-dart"}),'final createReviewReq = GCreateReviewReq(\n  (b) => b\n    ..executeOnListen = false\n    ..vars.review.stars = 5\n    ..vars.review.commentary = "Amazing!!!",\n);\n')),Object(i.b)("p",null,"Now we can use this request in our ",Object(i.b)("inlineCode",{parentName:"p"},"Operation")," Widget just as we did with our ",Object(i.b)("inlineCode",{parentName:"p"},"AllPokemon")," Query above. When we are ready to execute our mutation, we simply add it to the ",Object(i.b)("inlineCode",{parentName:"p"},"Client.requestController"),"."),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-dart"}),"client.requestController.add(createReviewReq);\n")))}p.isMDXComponent=!0},85:function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return b}));var r=n(0),a=n.n(r);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=a.a.createContext({}),p=function(e){var t=a.a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=p(e.components);return a.a.createElement(u.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},m=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),s=p(n),m=r,b=s["".concat(o,".").concat(m)]||s[m]||d[m]||i;return n?a.a.createElement(b,l(l({ref:t},u),{},{components:n})):a.a.createElement(b,l({ref:t},u))}));function b(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var u=2;u<i;u++)o[u]=n[u];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);